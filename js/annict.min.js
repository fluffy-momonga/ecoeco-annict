var watchingWorksJson,searchWorksJson,version=1,workFields="id annictId title titleKana ",episodeFields="id annictId numberText title viewerDidTrack ",watchingWorksQuery="query($episodeAnnictIds: [Int!], $withEpisodes: Boolean!) { viewer { works(state: WATCHING) { nodes { "+workFields+"episodes(orderBy: {field: SORT_NUMBER, direction: ASC}, first: 1) { nodes { "+episodeFields+"} } } } } searchEpisodes(annictIds: $episodeAnnictIds) @include(if: $withEpisodes) { nodes { "+episodeFields+"work { annictId } } } }",episodesQuery="query($ids: [Int!]!) { searchEpisodes(annictIds: $ids) @include(if: $skip) { nodes { "+episodeFields+"work { annictId } } } }",nextEpisodeQuery="query($id: Int!, $skip: Boolean!) { searchEpisodes(annictIds: [$id]) { nodes { nextEpisode { ...episodeFields nextEpisode @include(if: $skip) { ...episodeFields nextEpisode { ...episodeFields nextEpisode { ...episodeFields nextEpisode { ...episodeFields } } } } } work { episodes(orderBy: {field: SORT_NUMBER, direction: ASC}, first: 1) { nodes { ...episodeFields } } } } } } fragment episodeFields on Episode { "+episodeFields+"}",prevEpisodeQuery="query($id: Int!, $skip: Boolean!) { searchEpisodes(annictIds: [$id]) { nodes { prevEpisode { ...episodeFields prevEpisode @include(if: $skip) { ...episodeFields prevEpisode { ...episodeFields prevEpisode { ...episodeFields prevEpisode { ...episodeFields } } } } } work { episodes(orderBy: {field: SORT_NUMBER, direction: DESC}, first: 1) { nodes { ...episodeFields } } } } } } fragment episodeFields on Episode { "+episodeFields+"}",createRecordQuery="mutation($id: ID!) { createRecord(input: {episodeId: $id}) { record { episode { "+episodeFields+"} } } }",createReviewQuery='mutation($id: ID!) { createReview(input: {workId: $id, body: ""}) { review { work { title } } } }',updateStatusQuery="mutation($id: ID!, $state: StatusState!) { updateStatus(input: {workId: $id, state: $state}) { work { "+workFields+"episodes(first: 1, orderBy: {field: SORT_NUMBER, direction: ASC}) { nodes { "+episodeFields+"} } } } } ",searchWorksQuery="query($titles: [String!]!, $before: String, $after: String, $first: Int, $last: Int) { searchWorks(titles: $titles, orderBy: {field: SEASON, direction: DESC}, before: $before, after: $after, first: $first, last: $last) { nodes { "+workFields+"viewerStatusState } pageInfo { startCursor endCursor hasPreviousPage hasNextPage } } }",spaceReg=/[\s　]+/g;function getIdVariables(e){return{id:e}}function getIdsVariables(e){return{ids:$.isArray(e)?e:[e]}}function getStateVariables(e,s){return{id:e,state:s}}function getWatchingWorksVariables(e){return{episodeAnnictIds:e,withEpisodes:e.length>0}}function getSearchWorksVariables(e,s,o){var i={titles:e.split(spaceReg),before:s,after:o};return s?i.last=20:i.first=20,i}function updateWatchingWorksJson(e){var s=getWatchingWorksVariables(watchingWorksJson.episodeAnnictIds);postQuery(function(o){if(s.withEpisodes){var i=o.data.viewer.works.nodes;o.data.searchEpisodes.nodes.forEach(function(e){for(var s=e.work.annictId,o=0;o<i.length;o++)if(i[o].annictId==s){delete e.work,i[o].episodes.nodes=[e];break}}),delete o.data.searchEpisodes}watchingWorksJson=o,saveWatchingWorksJson(),e()},watchingWorksQuery,s)}function loadWatchingWorksJson(){var e=localStorage.getItem("watchingWorks");watchingWorksJson=e?JSON.parse(e):{data:{viewer:{works:{nodes:[]}}},episodeAnnictIds:[],version:version}}function saveWatchingWorksJson(){var e=/^ゔ[ぁぃぅぇぉ]?/,s={"ゔぁ":"ば","ゔぃ":"び","ゔ":"ぶ","ゔぅ":"ぶ","ゔぇ":"べ","ゔぉ":"ぼ"},o=function(e){return s[e]};watchingWorksJson.data.viewer.works.nodes.sort(function(s,i){var t=s.titleKana.replace(e,o),r=i.titleKana.replace(e,o);return t<r?-1:t>r?1:0}),watchingWorksJson.episodeAnnictIds=[],watchingWorksJson.data.viewer.works.nodes.forEach(function(e){var s=e.episodes.nodes;s.length>0&&watchingWorksJson.episodeAnnictIds.push(s[0].annictId)}),watchingWorksJson.version=version,setTimeout(function(){localStorage.setItem("watchingWorks",JSON.stringify(watchingWorksJson))},0)}function addWatchingWorksJson(e){return watchingWorksJson.data.viewer.works.nodes.push(e),saveWatchingWorksJson(),!0}function removeWatchingWorksJson(e){for(var s=watchingWorksJson.data.viewer.works.nodes,o=0;o<s.length;o++)if(s[o].annictId==e)return s.splice(o,1),saveWatchingWorksJson(),!0;return!1}function loadSearchWorksJson(){var e=localStorage.getItem("searchWorks");searchWorksJson=e?JSON.parse(e):{data:{searchWorks:{nodes:[],pageInfo:{}}},title:"",version:version}}function saveSearchWorksJson(){searchWorksJson.version=version,setTimeout(function(){localStorage.setItem("searchWorks",JSON.stringify(searchWorksJson))},0)}function clearStorage(){localStorage.clear(),sessionStorage.clear()}function postQuery(e,s,o){var i=function(e,i){var t={query:s.replace(spaceReg," ")};o&&(t.variables=o),$.ajax({url:"https://api.annict.com/graphql",type:"POST",contentType:"application/json",dataType:"json",headers:{Authorization:"bearer "+e},data:JSON.stringify(t),success:i,error:function(e,s,o){alert(s+": "+o+" "+e.status)}})},t=sessionStorage.getItem("token");t||(t=localStorage.getItem("token")),t?i(t,e):($("#token-modal-ok").unbind("click").bind("click",function(){var s=$("#token").val();if(s){var o=$('[name="storage"]:checked').val();i(s,function(i){sessionStorage.removeItem("token"),localStorage.removeItem("token"),"session"==o?sessionStorage.setItem("token",s):"local"==o&&localStorage.setItem("token",s),e&&e(i)})}$("#token-modal").modal("hide")}),$("#token-modal").modal())}loadWatchingWorksJson();