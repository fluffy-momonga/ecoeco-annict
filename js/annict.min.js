var watchingWorksJson,searchWorksJson,version=1,workFields="id annictId title titleKana ",episodeFields="id annictId numberText title viewerDidTrack ",watchingWorksQuery="query($episodeAnnictIds: [Int!], $withEpisodes: Boolean!) { viewer { works(state: WATCHING) { nodes { "+workFields+"episodes(orderBy: {field: SORT_NUMBER, direction: ASC}, first: 1) { nodes { "+episodeFields+"} } } } } searchEpisodes(annictIds: $episodeAnnictIds) @include(if: $withEpisodes) { nodes { "+episodeFields+"work { annictId } } } }",nextEpisodeQuery="query($id: Int!, $skip: Boolean!) { searchEpisodes(annictIds: [$id]) { nodes { nextEpisode { ...episodeFields nextEpisode @include(if: $skip) { ...episodeFields nextEpisode { ...episodeFields nextEpisode { ...episodeFields nextEpisode { ...episodeFields } } } } } work { episodes(orderBy: {field: SORT_NUMBER, direction: ASC}, first: 1) { nodes { ...episodeFields } } } } } } fragment episodeFields on Episode { "+episodeFields+"}",prevEpisodeQuery="query($id: Int!, $skip: Boolean!) { searchEpisodes(annictIds: [$id]) { nodes { prevEpisode { ...episodeFields prevEpisode @include(if: $skip) { ...episodeFields prevEpisode { ...episodeFields prevEpisode { ...episodeFields prevEpisode { ...episodeFields } } } } } work { episodes(orderBy: {field: SORT_NUMBER, direction: DESC}, first: 1) { nodes { ...episodeFields } } } } } } fragment episodeFields on Episode { "+episodeFields+"}",createRecordQuery="mutation($id: ID!, $rating: RatingState, $comment: String, $twitter: Boolean, $facebook: Boolean) { createRecord(input: {episodeId: $id, ratingState: $rating, comment: $comment, shareTwitter: $twitter, shareFacebook: $facebook}) { record { episode { "+episodeFields+"} } } }",createReviewQuery="mutation($id: ID!, $body: String!, $overall: RatingState, $animation: RatingState, $music: RatingState, $story: RatingState, $character: RatingState, $twitter: Boolean, $facebook: Boolean) { createReview(input: {workId: $id, body: $body, ratingOverallState: $overall, ratingAnimationState: $animation, ratingMusicState: $music, ratingStoryState: $story, ratingCharacterState: $character, shareTwitter: $twitter, shareFacebook: $facebook}) { review { work { title } } } }",updateStatusQuery="mutation($id: ID!, $state: StatusState!) { updateStatus(input: {workId: $id, state: $state}) { work { "+workFields+"episodes(first: 1, orderBy: {field: SORT_NUMBER, direction: ASC}) { nodes { "+episodeFields+"} } } } } ",searchWorksQuery="query($titles: [String!]!, $before: String, $after: String, $first: Int, $last: Int) { searchWorks(titles: $titles, orderBy: {field: SEASON, direction: DESC}, before: $before, after: $after, first: $first, last: $last) { nodes { "+workFields+"viewerStatusState } pageInfo { startCursor endCursor hasPreviousPage hasNextPage } } }",spaceReg=/[\s　]+/g;function getIdVariables(e){return{id:e}}function getIdsVariables(e){return{ids:$.isArray(e)?e:[e]}}function getStateVariables(e,t){return{id:e,state:t}}function getWatchingWorksVariables(e){return{episodeAnnictIds:e,withEpisodes:e.length>0}}function getSearchWorksVariables(e,t,s){var o={titles:e.split(spaceReg),before:t,after:s};return t?o.last=20:o.first=20,o}function getEpisodeRecordVariables(e,t,s,o,i){var r={id:e};return t&&(r.rating=t),s&&(r.comment=s),o&&(r.twitter=o),i&&(r.facebook=i),r}function getWorkReviewVariables(e,t,s,o,i,r,a,n,d){var c={id:e,body:t};return s&&(c.overall=s),o&&(c.animation=o),i&&(c.music=i),r&&(c.story=r),a&&(c.character=a),n&&(c.twitter=n),d&&(c.facebook=d),c}function updateWatchingWorksJson(e){var t=getWatchingWorksVariables(watchingWorksJson.episodeAnnictIds);postQuery(function(s){if(t.withEpisodes){var o=s.data.viewer.works.nodes;s.data.searchEpisodes.nodes.forEach(function(e){for(var t=e.work.annictId,s=0;s<o.length;s++)if(o[s].annictId==t){delete e.work,o[s].episodes.nodes=[e];break}}),delete s.data.searchEpisodes}watchingWorksJson=s,saveWatchingWorksJson(),e()},watchingWorksQuery,t)}function loadWatchingWorksJson(){var e=localStorage.getItem("watchingWorks");watchingWorksJson=e?JSON.parse(e):{data:{viewer:{works:{nodes:[]}}},episodeAnnictIds:[],version:version}}function saveWatchingWorksJson(){var e=/^ゔ[ぁぃぅぇぉ]?/,t={"ゔぁ":"ば","ゔぃ":"び","ゔ":"ぶ","ゔぅ":"ぶ","ゔぇ":"べ","ゔぉ":"ぼ"},s=function(e){return t[e]};watchingWorksJson.data.viewer.works.nodes.sort(function(t,o){var i=t.titleKana?t.titleKana.replace(e,s):t.title.replace(e,s),r=o.titleKana?o.titleKana.replace(e,s):o.title.replace(e,s);return i<r?-1:i>r?1:0}),watchingWorksJson.episodeAnnictIds=[],watchingWorksJson.data.viewer.works.nodes.forEach(function(e){var t=e.episodes.nodes;t.length>0&&watchingWorksJson.episodeAnnictIds.push(t[0].annictId)}),watchingWorksJson.version=version,setTimeout(function(){localStorage.setItem("watchingWorks",JSON.stringify(watchingWorksJson))},0)}function addWatchingWorksJson(e){for(var t=watchingWorksJson.data.viewer.works.nodes,s=0;s<t.length;s++)if(t[s].annictId==e.annictId)return!1;return watchingWorksJson.data.viewer.works.nodes.push(e),saveWatchingWorksJson(),!0}function removeWatchingWorksJson(e){for(var t=watchingWorksJson.data.viewer.works.nodes,s=0;s<t.length;s++)if(t[s].annictId==e)return t.splice(s,1),saveWatchingWorksJson(),!0;return!1}function loadSearchWorksJson(){var e=localStorage.getItem("searchWorks");searchWorksJson=e?JSON.parse(e):{data:{searchWorks:{nodes:[],pageInfo:{hasPreviousPage:!1,hasNextPage:!1}}},title:"",version:version}}function saveSearchWorksJson(){searchWorksJson.version=version,setTimeout(function(){localStorage.setItem("searchWorks",JSON.stringify(searchWorksJson))},0)}function clearSearchWorksJson(){localStorage.removeItem("searchWorks"),loadSearchWorksJson(),saveSearchWorksJson()}function clearStorage(){localStorage.clear(),sessionStorage.clear()}function alertMessage(e,t,s){var o=$("#alert"),i=o.find("#alert-bg"),r=i.data("bg"),a="bg-"+t;i.removeClass(r).addClass(a).data("bg",a),o.find("#alert-message").text(e),o.show("fast",function(){setTimeout(function(){o.click()},s||2500)})}function postQuery(e,t,s){var o=function(e,o){var i={query:t.replace(spaceReg," ")};s&&(i.variables=s),$.ajax({url:"https://api.annict.com/graphql",type:"POST",contentType:"application/json",dataType:"json",headers:{Authorization:"bearer "+e},data:JSON.stringify(i),success:o,error:function(e){var t="";if(e.responseText){t=": ";try{var s=JSON.parse(e.responseText);s.message&&(t+=s.message)}catch(s){t+=e.responseText}}alertMessage("Graphql API のリクエストでエラーが発生しました。 ("+e.status+t+")","danger",5e3)}})},i=sessionStorage.getItem("token");i||(i=localStorage.getItem("token")),i?o(i,e):($("#token-modal-ok").unbind("click").bind("click",function(){var t=$("#token").val();if(t){var s=$('[name="storage"]:checked').val();o(t,function(o){sessionStorage.removeItem("token"),localStorage.removeItem("token"),"session"==s?sessionStorage.setItem("token",t):"local"==s&&localStorage.setItem("token",t),e&&e(o)})}else alertMessage("アクセストークンを入力してください。","danger");$("#token-modal").modal("hide")}),$("#token-modal").modal())}$(function(){$("#alert").click(function(){$(this).hide("fast")})}),loadWatchingWorksJson();